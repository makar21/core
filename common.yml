version: '2.3'

services:
  tendermint_this:
    image: tendermint/tendermint:0.22.4
    ports:
      - "26656:26656"
      - "127.0.0.1:26657:26657"
    restart: always
    entrypoint: ''
    command: sh -c "tendermint node --consensus.create_empty_blocks=false --proxy_app=tcp://bigchaindb_this:26658 --p2p.persistent_peers=$PEERS --log_level=*:info"
    volumes:
      - ./tmdata/$NET_NAME/this/config:/tendermint/config
      - ./docker/volumes/$NET_NAME/tendermint/$NET_NAME/this/data:/tendermint/data
#    links:
#      - tendermint_node0
#      - tendermint_node1
#      - tendermint_node2
#      - tendermint_node3


  mongodb_this:
    image: mongo:3.7
    ports:
      - "127.0.0.1:$TATAU_MONGO_DB_PORT:27017/tcp"
    volumes:
      - ./docker/volumes/$NET_NAME/mono/this:/data/db
    restart: always


  bigchaindb_this:
    image: bigchaindb/bigchaindb:2.0.0-beta3
    depends_on:
      - mongodb_this
      - tendermint_this
    links:
      - mongodb_this:mongodb
      - tendermint_this:tendermint
    environment:
      BIGCHAINDB_DATABASE_BACKEND: localmongodb
      BIGCHAINDB_DATABASE_HOST: mongodb
      BIGCHAINDB_DATABASE_PORT: 27017
      BIGCHAINDB_SERVER_BIND: 0.0.0.0:9984
      BIGCHAINDB_WSSERVER_HOST: 0.0.0.0
      BIGCHAINDB_WSSERVER_ADVERTISED_HOST: bigchaindb
      BIGCHAINDB_TENDERMINT_HOST: tendermint
      BIGCHAINDB_TENDERMINT_PORT: 26657
    ports:
      - "127.0.0.1:9984:9984"
      - "127.0.0.1:9985:9985"
      - "127.0.0.1:26658:26658"
    volumes:
      - ./docker/volumes/$NET_NAME/bigchaindb/this/data:/data
      - ./docker/volumes/$NET_NAME/bigchaindb/this/certs:/certs
    healthcheck:
      test: ["CMD", "bash", "-c", "curl http://bigchaindb_this:9984 && curl http://tendermint:26657/abci_query"]
      interval: 3s
      timeout: 5s
      retries: 3
    entrypoint: sh -c "bigchaindb -l INFO -y configure && bigchaindb -l INFO start"
    restart: always

  ipfs:
    image: ipfs/go-ipfs:v0.4.17
    volumes:
      - ./docker/volumes/ipfs/staging:/export
      - ./docker/volumes/ipfs/data:/data/ipfs
    ports:
      - "4001:4001"
      - "127.0.0.1:8080:8080"
      - "127.0.0.1:$TATAU_IPFS_PORT:5001"
    restart: always

  parity:
    image: parity/parity:v1.11.8
    ports:
      - "127.0.0.1:$PARITY_JSONRPC_PORT:8545/tcp" # JSONRPC
      - "127.0.0.1:$PARITY_WEBSOCKET_PORT:8546/tcp" # websocket
      - "127.0.0.1:$PARITY_WEBSERVER_PORT:8180/tcp" # webserver
      - "127.0.0.1:8181:8080/tcp" # ?
    command: ["--base-path=/parity/data", "--logging=info", "--config=/parity/config/config.toml"]
    restart: always
    volumes:
      - $PWD/parity/$PARITY_NET/config:/parity/config:ro
      - $PWD/docker/volumes/parity/$PARITY_NET/data:/parity/data
      - $PWD/parity/$PARITY_NET/keys:/parity/data/keys/TatauNet
      # - $PWD/parity/wallet/account.pass:/parity/data/account.pass:ro
#    --unlock=[ACCOUNTS]
#        Unlock ACCOUNTS for the duration of the execution. ACCOUNTS is a comma-delimited list of addresses. Implies
#        --no-ui.
#
#    --password=[FILE]...
#        Provide a file containing a password for unlocking an account. Leading and trailing whitespace is trimmed.
#        (default: [])
#    --author=[ADDRESS]
#        Specify the block author (aka "coinbase") address for sending block rewards from sealed blocks. NOTE: MINING
#        WILL NOT WORK WITHOUT THIS OPTION.
#
#    --engine-signer=[ADDRESS]
#        Specify the address which should be used to sign consensus messages and issue blocks. Relevant only to non-PoW
#        chains.